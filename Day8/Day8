# Day 8: File Handling, Exception Handling & Modules

# ---------------------------
# 1. File Handling Examples
# ---------------------------

# Reading from a file
f = open("sample.txt", "r")
print("Reading File Content:")
print(f.read())
f.close()

# Writing to a file (overwrite existing content)
f = open("sample.txt", "w")
f.write("I want to learn Python tomorrow.")
f.close()

# Appending data to a file
f = open("sample.txt", "a")
f.write(" Then I will go to Machine Learning.")
f.close()

# Using 'with open' (auto close)
with open("sample.txt", "r") as f:
    print("\nUsing 'with open':")
    print(f.read())

# ---------------------------
# 2. Practice Questions
# ---------------------------

# Create and write to practise.txt
with open("practise.txt", "w") as f:
    f.write("Hi Everyone\nWe are learning file I/O\n")
    f.write("Using Python\nI like programming in Python")

# Replace 'java' with 'python'
with open("practise.txt", "r") as f:
    data = f.read()
data = data.replace("java", "python")
with open("practise.txt", "w") as f:
    f.write(data)

# Check if a word exists
with open("practise.txt", "r") as f:
    content = f.read()
if "learning" in content:
    print("\nWord 'learning' found in file.")
else:
    print("\nWord 'learning' not found.")

# ---------------------------
# 3. Exception Handling
# ---------------------------

try:
    f = open("missingfile.txt", "r")
    print(f.read())
except FileNotFoundError:
    print("\nFile not found.")
except Exception as e:
    print("\nSome error occurred:", e)
else:
    print("\nFile read successfully.")
finally:
    print("Finally block executed.")

# Raising custom exceptions
try:
    raise ZeroDivisionError("Can't divide by 0")
except ZeroDivisionError as e:
    print("\nRaised Exception:", e)








